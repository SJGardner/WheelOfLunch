<!DOCTYPE html>
<html>
<head>
	<title>Wheel of POP</title>
	<meta http-equiv="content-type" content="text/html;charset=utf-8" />
	<script type="text/javascript" src="lib/jquery-1.8.2.min.js"></script>
	<script type="text/javascript" src="lib/jquery-ui-1.9.2.min.js"></script>
	<script type="text/javascript" src="lib/jquery.jSlots.min.js" charset="utf-8"></script>
	<script type="text/javascript" src="lib/jquery.easing.1.3.js" charset="utf-8"></script>
	<script type="text/javascript" src="lib/bootstrap/js/bootstrap.min.js"></script>
	<script type="text/javascript" src="wheeloflunch.js"></script>
	<script type="text/javascript" src="wheel.js"></script>
	<script type="text/javascript" charset="utf-8">

		var spin_sounds = [
			new Audio('sound/around_the_world.mp3'),
			new Audio('sound/round_and_round.mp3'),
			new Audio('sound/round_n_round.mp3'),
			new Audio('sound/what_goes_around_comes_around.mp3'),
			new Audio('sound/when_i_come_around.mp3'),
			new Audio('sound/you_spin_me_right_round.mp3'),
		];
		var win_sound = new Audio('sound/coin.wav');

		$(document).ready(function() {
			$("#data").select();
		});

		// Check if the canvas element is supported
		function isCanvasSupported() {
			var elem = document.createElement('canvas');
			return !!(elem.getContext && elem.getContext('2d'));
		}

		// Creates a wheel given the weights and names entered in the textarea
		function createWheelFromData() {
			$('#wheelContainer').empty();
			var restaurants = [];

			// Loop over rows of text
			$.each($('#data').val().split(/\n/), function(key, value) {

				// If there is a tab, split the data at the tab into the weight before
				// the tab and the name after the tab.
				var indexOfTab = value.indexOf('	');
				if (indexOfTab > 0) {
					var currentName = value.substring(indexOfTab + 1, value.length);
					var currentWeight = value.substring(0, indexOfTab);
					restaurants.push({ name : currentName, weight : parseInt(currentWeight) });
				}
			});
			
			var cheater = function() {
				
			}

			var onStartingWheel = function ()
			{
				var canvas = $("canvas").get(0);
				this.drawingHelper = new BallDrawing(canvas.width, canvas.height);

				if (window.spins == undefined) {
					window.spins=0;
				}							
			}
			
			var onWheelStopped = function ()
			{
				if (window.spins == undefined) {
					window.spins=0;
				}
				window.spins++;
			}

			var onDrawing = function(context, radiusInner, radiusOuter, progress)
			{				
				this.drawingHelper.draw(progress * 10);

				var x = this.drawingHelper.getX();
				var y = this.drawingHelper.getY();
				var ballRadius = this.drawingHelper.getBallRadius(radiusInner, progress * 10);

				this.context.arc(x, y, ballRadius, 0, 2 * Math.PI, false);
				var fill = "#DEADBE";
				this.context.fillStyle = fill;
				this.context.fill();
			}

			var backgroundImages = ["goalkeeper.png", "goalkeeper_velocityehs.png"];
			wheel = new Wheel('wheelContainer', restaurants, 
			{ height : 800, showProgress : false, expectLongText : false, spinSound : spin_sounds, winSound : win_sound, backgroundImages: backgroundImages, winCallback: cheater,
			onStartingWheel: onStartingWheel, onWheelStopped: onWheelStopped, onDrawing: onDrawing });
			wheel.drawWheel();
		}

		// On load, show a warning if the canvas element is not supported
		$(document).ready(function () {
			if (!isCanvasSupported()) {
				$('.canvassupportwarningfade').show('blind', { direction: 'up' }, 1000);
				$('.canvassupportwarning').show();
			}
		});

		var wheel;

		// Handles a request to spin the wheel
		function spin() {
			wheel.spin();
		}

		function BallDrawing(width, height)
		{
			this.canvasHeight = height;
			this.canvasWidth = width;
			this.currentX = 0;
			this.currentY = height;
			this.finalX = width / 2.3;
			this.finalY = height / 2;
			this.fromleft = true;
			this.currentProgress = 0;

			this.getY = function()
			{
				return this.currentY;
			}

			this.getX = function()
			{
				return this.fromleft ? this.currentX : this.canvasWidth - this.currentX;
			}

			this.getBallRadius = function(radius, progress)
			{
				var actualProgress = progress - Math.floor(progress);
				return radius * 0.3 * (1.45 - actualProgress);
			}

			this.draw = function(progress)
			{
				var previousProgress = this.currentProgress;
				this.currentProgress = progress - Math.floor(progress);

				this.currentX = this.currentProgress * this.finalX;				
				this.currentY = this.canvasHeight - (this.finalY * this.currentProgress - 4.9 * this.currentProgress * this.currentProgress);

				if (previousProgress > this.currentProgress)
				{
					// set new direction
					var offset = 1.9 + Math.random(0.3);
					this.fromleft = !this.fromleft;
					this.finalX = this.canvasWidth / offset;
				}
			}
		}

	</script>

	<link href="lib/bootstrap/css/bootstrap.min.css" rel="stylesheet" media="screen">
	<style>
		body { padding-top: 0px; }
	</style>
	<link href="lib/bootstrap/css/bootstrap-responsive.css" rel="stylesheet">
	<link href="wheeloflunch.css" rel="stylesheet" type="text/css" />
</head>
<body style="text-align: center; margin: 0px;">

	<div class="canvassupportwarning alert alert-block" style="display: none; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #666666">
		<div class="canvassupportwarningfade" style="display: none; background-color: #f7f7f7; padding: 6px; color: red;">
			Your browser does not support the canvas element. If you are using Internet Explorer, turn off Compatibility View.
		</div>
	</div>

	<!-- The button to spin the wheel. -->
	<input type="button" id="spin" style="margin-top: 10px;" value="GET A HIGH 5"
		class="btn btn-primary btn-large" onclick="spin();" />

	<!-- The data entry page that is initially visible -->
	<div id="dataPage"style="position:absolute;top:10%;left:10%;width:80%;height:80%;">
		Enter wheel entries one per line with weight and name separated by a tab.
		<textarea id="data" style="width:100%;height:100%;" onblur="$('#wheelPage').show();createWheelFromData();$('#dataPage').hide();">2	Sample 1
1	Sample 2
1	Sample 3</textarea>
	</div>

	<!-- The wheel page, not initially visible while entering data. -->
	<div id="wheelPage" class="container" style="display:none;">
		<div>
			<div style="float:right;display:none;">
				<input type="Submit" onclick="$('#data').show();return false;" value="Set up" />
			</div>
		</div>
		<!-- The wheel -->
		<div id="wheelContainer" style="padding-top: 8px;">
		</div>
		<img src="images/stickman_left.png" class="fifa top lefty" />
		<img src="images/stickman_left.png" class="fifa bottom lefty" />
		<img src="images/stickman_right.png" class="fifa top righty" />
		<img src="images/stickman_right.png" class="fifa bottom righty" />
	</div>

</body>
</html>
